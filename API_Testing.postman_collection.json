{
	"info": {
		"_postman_id": "8824522a-b449-4bec-8212-3ae3b0620e39",
		"name": "API_Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32325997",
		"_collection_link": "https://speeding-rocket-185971.postman.co/workspace/tamjeed-practice~78910efc-38db-4a50-9f14-69b1e95e6cc2/collection/32325997-8824522a-b449-4bec-8212-3ae3b0620e39?action=share&source=collection_link&creator=32325997"
	},
	"item": [
		{
			"name": "Create_Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set('id',jsonData.bookingid)\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName=pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"//console.log(firstName);\r",
							"pm.environment.set('firstName',firstName)\r",
							"\r",
							"var lastName=pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set('lastName',lastName);\r",
							"\r",
							"var totalPrice =pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set('totalPrice',totalPrice);\r",
							"\r",
							"const moment = require(\"moment\")\r",
							"var today=moment()\r",
							"var number = Math.random()*10;\r",
							"var checkIn =today.format(\"YYYY-MM-DD\")\r",
							"pm.environment.set('checkIn',checkIn)\r",
							"var checkOut =today.add(number,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set('checkOut',checkOut)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkIn}}\",\r\n    \t\"checkout\" : \"{{checkOut}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode=pm.response.code\r",
							"\r",
							"switch(statusCode){\r",
							"    case 200 :\r",
							"                var data =pm.response.json()\r",
							"                pm.test(\"Status code is 200\", function () {\r",
							"                    pm.response.to.have.status(200);\r",
							"                });\r",
							"\r",
							"\r",
							"                pm.test(\"First name verify\",function(){\r",
							"                    pm.expect(pm.environment.get(\"firstName\")).to.eql(data.firstname)\r",
							"                })\r",
							"\r",
							"                pm.test(\"Last Name verify\",function(){\r",
							"                    pm.expect(pm.environment.get(\"lastName\")).to.eql(data.lastname)\r",
							"                })\r",
							"\r",
							"                pm.test(\"Total price verify\",function(){\r",
							"                    pm.expect(pm.environment.get(\"totalPrice\")).to.eql(data.totalprice.toString())\r",
							"                })\r",
							"\r",
							"                pm.test(\"CheckIn Date verify\",function(){\r",
							"                    pm.expect(pm.environment.get(\"checkIn\")).to.eql(data.bookingdates.checkin)\r",
							"                })\r",
							"\r",
							"                pm.test(\"Checkout Date verify\",function(){\r",
							"                    pm.expect(pm.environment.get(\"checkOut\")).to.eql(data.bookingdates.checkout)\r",
							"                })\r",
							"                break;\r",
							"\r",
							"    case 404 :\r",
							"                pm.test(\"Not Found\")\r",
							"                break;   \r",
							"\r",
							"    case 500 : \r",
							"                pm.test(\"Internal Server Error\")\r",
							"                break;\r",
							"\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create_Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let token_value = pm.response.json()\r",
							"\r",
							"pm.environment.set('t_value',token_value.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update_Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName=pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"//console.log(firstName);\r",
							"pm.environment.set('firstName',firstName)\r",
							"\r",
							"var lastName=pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set('lastName',lastName);\r",
							"\r",
							"var totalPrice =pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set('totalPrice',totalPrice);\r",
							"\r",
							"const moment = require(\"moment\")\r",
							"var today=moment()\r",
							"var number = Math.random()*10;\r",
							"var checkIn =today.format(\"YYYY-MM-DD\")\r",
							"pm.environment.set('checkIn',checkIn)\r",
							"var checkOut =today.add(number,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set('checkOut',checkOut)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{t_value}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkIn}}\",\r\n    \t\"checkout\" : \"{{checkOut}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "verify_after_update_booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data =pm.response.json()\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"First name verify\",function(){\r",
							"    pm.expect(pm.environment.get(\"firstName\")).to.eql(data.firstname)\r",
							"})\r",
							"\r",
							"pm.test(\"Last Name verify\",function(){\r",
							"    pm.expect(pm.environment.get(\"lastName\")).to.eql(data.lastname)\r",
							"})\r",
							"\r",
							"pm.test(\"Total price verify\",function(){\r",
							"    pm.expect(pm.environment.get(\"totalPrice\")).to.eql(data.totalprice.toString())\r",
							"})\r",
							"\r",
							"pm.test(\"CheckIn Date verify\",function(){\r",
							"    pm.expect(pm.environment.get(\"checkIn\")).to.eql(data.bookingdates.checkin)\r",
							"})\r",
							"\r",
							"pm.test(\"Checkout Date verify\",function(){\r",
							"    pm.expect(pm.environment.get(\"checkOut\")).to.eql(data.bookingdates.checkout)\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{t_value}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "verify_after_delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}